<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nft.mall.mapper.ProductTradeMapper">

    <resultMap type="com.nft.mall.domain.ProductTrade" id="ProductTradeResult">
        <result property="productTradeId" column="product_trade_id"/>
        <result property="productId" column="product_id"/>
        <result property="categoryId" column="category_id"/>
        <result property="tokenId" column="token_id"/>
        <result property="price" column="price"/>
        <result property="fromId" column="from_id"/>
        <result property="toId" column="to_id"/>
        <result property="fromAddress" column="from_address"/>
        <result property="toAddress" column="to_address"/>
        <result property="contractAddress" column="contract_address"/>
        <result property="tradeHash" column="trade_hash"/>
        <result property="tradeAmount" column="trade_amount"/>
        <result property="tradeFee" column="trade_fee"/>
        <result property="serviceRate" column="service_rate"/>
        <result property="copyrightRate" column="copyright_rate"/>
        <result property="status" column="status"/>
        <result property="createId" column="create_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="coinType" column="coin_type"/>
    </resultMap>

    <sql id="selectProductTradeVo">
        select product_trade_id,
               product_id,
               category_id,
               token_id,
               price,
               from_id,
               to_id,
               from_address,
               to_address,
               contract_address,
               trade_hash,
               trade_amount,
               trade_fee,
               service_rate,
               copyright_rate,
               status,
               create_id,
               create_time,
               update_time
        from t_product_trade
    </sql>

    <sql id="selectProductTradeVoCON">


        select product_trade_id,
               t_product_trade.product_id       AS product_id,
               t_product_trade.category_id      AS category_id,
               t_product_trade.token_id         AS token_id,
               t_product_trade.price            AS price,
               t_product_trade.from_id          AS from_id,
               t_product_trade.to_id            AS to_id,
               t_product_trade.from_address     AS from_address,
               t_product_trade.to_address       AS to_address,
               t_product_trade.contract_address AS contract_address,
               t_product_trade.trade_hash       AS trade_hash,
               t_product_trade.trade_amount     AS trade_amount,
               t_product_trade.trade_fee        AS trade_fee,
               t_product_trade.service_rate     AS service_rate,
               t_product_trade.copyright_rate   AS copyright_rate,
               t_product_trade.status           AS status,
               t_product_trade.create_id        AS create_id,
               t_product_trade.create_time      AS create_time,
               t_product_trade.update_time      AS update_time,
               t_product_token.coin_type        AS coin_type
        from t_product_trade
                 LEFT JOIN t_product_token ON t_product_trade.product_id = t_product_token.product_id
    </sql>

    <select id="selectProductTradeList" parameterType="com.nft.mall.domain.ProductTrade" resultMap="ProductTradeResult">
        <include refid="selectProductTradeVo"/>
        <where>
            <if test="productId != null ">and product_id = #{productId}</if>
            <if test="categoryId != null ">and category_id = #{categoryId}</if>
            <if test="tokenId != null ">and token_id = #{tokenId}</if>
            <if test="price != null ">and price = #{price}</if>
            <if test="fromId != null ">and from_id = #{fromId}</if>
            <if test="toId != null ">and to_id = #{toId}</if>
            <if test="fromAddress != null  and fromAddress != ''">and from_address = #{fromAddress}</if>
            <if test="toAddress != null  and toAddress != ''">and to_address = #{toAddress}</if>
            <if test="contractAddress != null  and contractAddress != ''">and contract_address = #{contractAddress}</if>
            <if test="tradeHash != null ">and trade_hash = #{tradeHash}</if>
            <if test="tradeAmount != null ">and trade_amount = #{tradeAmount}</if>
            <if test="tradeFee != null ">and trade_fee = #{tradeFee}</if>
            <if test="serviceRate != null ">and service_rate = #{serviceRate}</if>
            <if test="copyrightRate != null ">and copyright_rate = #{copyrightRate}</if>
            <if test="status != null ">and status = #{status}</if>
            <if test="createId != null ">and create_id = #{createId}</if>
        </where>
        order by create_time desc
    </select>

    <select id="selectProductTradeById" parameterType="Long" resultMap="ProductTradeResult">
        <include refid="selectProductTradeVo"/>
        where product_trade_id = #{productTradeId}
    </select>

    <insert id="insertProductTrade" parameterType="com.nft.mall.domain.ProductTrade" useGeneratedKeys="true"
            keyProperty="productTradeId">
        insert into t_product_trade
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null">product_id,</if>
            <if test="categoryId != null">category_id,</if>
            <if test="tokenId != null">token_id,</if>
            <if test="price != null">price,</if>
            <if test="fromId != null">from_id,</if>
            <if test="toId != null">to_id,</if>
            <if test="fromAddress != null">from_address,</if>
            <if test="toAddress != null">to_address,</if>
            <if test="contractAddress != null">contract_address,</if>
            <if test="tradeHash != null">trade_hash,</if>
            <if test="tradeAmount != null">trade_amount,</if>
            <if test="tradeFee != null">trade_fee,</if>
            <if test="serviceRate != null">service_rate,</if>
            <if test="copyrightRate != null">copyright_rate,</if>
            <if test="status != null">status,</if>
            <if test="createId != null">create_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null">#{productId},</if>
            <if test="categoryId != null">#{categoryId},</if>
            <if test="tokenId != null">#{tokenId},</if>
            <if test="price != null">#{price},</if>
            <if test="fromId != null">#{fromId},</if>
            <if test="toId != null">#{toId},</if>
            <if test="fromAddress != null">#{fromAddress},</if>
            <if test="toAddress != null">#{toAddress},</if>
            <if test="contractAddress != null">#{contractAddress},</if>
            <if test="tradeHash != null">#{tradeHash},</if>
            <if test="tradeAmount != null">#{tradeAmount},</if>
            <if test="tradeFee != null">#{tradeFee},</if>
            <if test="serviceRate != null">#{serviceRate},</if>
            <if test="copyrightRate != null">#{copyrightRate},</if>
            <if test="status != null">#{status},</if>
            <if test="createId != null">#{createId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateProductTrade" parameterType="com.nft.mall.domain.ProductTrade">
        update t_product_trade
        <trim prefix="SET" suffixOverrides=",">
            <if test="productId != null">product_id = #{productId},</if>
            <if test="categoryId != null">category_id = #{categoryId},</if>
            <if test="tokenId != null">token_id = #{tokenId},</if>
            <if test="price != null">price = #{price},</if>
            <if test="fromId != null">from_id = #{fromId},</if>
            <if test="toId != null">to_id = #{toId},</if>
            <if test="fromAddress != null">from_address = #{fromAddress},</if>
            <if test="toAddress != null">to_address = #{toAddress},</if>
            <if test="contractAddress != null">contract_address = #{contractAddress},</if>
            <if test="tradeHash != null">trade_hash = #{tradeHash},</if>
            <if test="tradeAmount != null">trade_amount = #{tradeAmount},</if>
            <if test="tradeFee != null">trade_fee = #{tradeFee},</if>
            <if test="serviceRate != null">service_rate = #{serviceRate},</if>
            <if test="copyrightRate != null">copyright_rate = #{copyrightRate},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createId != null">create_id = #{createId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where product_trade_id = #{productTradeId}
    </update>

    <delete id="deleteProductTradeById" parameterType="Long">
        delete
        from t_product_trade
        where product_trade_id = #{productTradeId}
    </delete>

    <delete id="deleteProductTradeByIds" parameterType="String">
        delete from t_product_trade where product_trade_id in
        <foreach item="productTradeId" collection="array" open="(" separator="," close=")">
            #{productTradeId}
        </foreach>
    </delete>

    <select id="selectByCertificationIdSet" parameterType="Long" resultMap="ProductTradeResult">
        <include refid="selectProductTradeVo"/>
        where create_id in
        <foreach item="certificationId" collection="certificationIdSet" open="(" separator="," close=")">
            #{certificationId}
        </foreach>
    </select>

    <select id="selectByCertificationIdSetAndStatus" resultMap="ProductTradeResult">
        <include refid="selectProductTradeVo"/>
        where create_id in
        <foreach item="certificationId" collection="certificationIdSet" open="(" separator="," close=")">
            #{certificationId}
        </foreach>
        <if test="statusSet.size() > 0">
            and status in
            <foreach item="status" collection="statusSet" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
    </select>

    <select id="selectByContractAddressAndTokenId" resultMap="ProductTradeResult">
        <include refid="selectProductTradeVo"/>
        where contract_address = #{contractAddress} and token_id = #{tokenId}
        order by create_time desc
    </select>

    <select id="selectByContractAddressAndTokenIdCON" resultMap="ProductTradeResult">
        <include refid="selectProductTradeVoCON"/>
        where t_product_trade.contract_address = #{contractAddress} and t_product_trade.token_id = #{tokenId}
        order by t_product_trade.create_time desc
    </select>

    <select id="selectByAddress" resultMap="ProductTradeResult">
        <include refid="selectProductTradeVo"/>
        where from_address = #{address} or to_address = #{address}
        order by create_time desc
    </select>

    <select id="selectByProductId" resultMap="ProductTradeResult">
        <include refid="selectProductTradeVo"/>
        where product_id = #{productId}
        order by create_time desc
        limit 1
    </select>

</mapper>