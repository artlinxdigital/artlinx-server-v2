<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nft.mall.mapper.ChargeMapper">

    <resultMap type="com.nft.mall.domain.Charge" id="ChargeResult">
        <result property="id"    column="id"    />
        <result property="money"    column="money"    />
        <result property="type"    column="type"    />
        <result property="certificationId"    column="certification_id"    />
        <result property="address"    column="address"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectChargeVo">
        select id, money, type, certification_id, address, status, create_time, update_time from t_charge
    </sql>

    <select id="selectChargeList" parameterType="com.nft.mall.domain.Charge" resultMap="ChargeResult">
        <include refid="selectChargeVo"/>
        <where>
            <if test="money != null "> and money = #{money}</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="certificationId != null "> and certification_id = #{certificationId}</if>
            <if test="address != null  and address != ''"> and address = #{address}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
    </select>

    <select id="selectChargeById" parameterType="String" resultMap="ChargeResult">
        <include refid="selectChargeVo"/>
        where id = #{id}
    </select>

    <insert id="insertCharge" parameterType="com.nft.mall.domain.Charge">
        insert into t_charge
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="money != null">money,</if>
            <if test="type != null">type,</if>
            <if test="certificationId != null">certification_id,</if>
            <if test="address != null and address != ''">address,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="money != null">#{money},</if>
            <if test="type != null">#{type},</if>
            <if test="certificationId != null">#{certificationId},</if>
            <if test="address != null and address != ''">#{address},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateCharge" parameterType="com.nft.mall.domain.Charge">
        update t_charge
        <trim prefix="SET" suffixOverrides=",">
            <if test="money != null">money = #{money},</if>
            <if test="type != null">type = #{type},</if>
            <if test="certificationId != null">certification_id = #{certificationId},</if>
            <if test="address != null and address != ''">address = #{address},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteChargeById" parameterType="String">
        delete from t_charge where id = #{id}
    </delete>

    <delete id="deleteChargeByIds" parameterType="String">
        delete from t_charge where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="listByCertificationIdAndStatus" parameterType="Long" resultMap="ChargeResult">
        <include refid="selectChargeVo"/>
        <where>
            <if test="certificationId != null and certificationId > 0 "> and certification_id = #{certificationId}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
        order by create_time desc
    </select>
</mapper>